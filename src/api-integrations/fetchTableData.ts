
// Table schema/type map for validation
export const TABLE_TYPE_MAP = {
  buddy_packages: {
    package_id: 'string',
    package_name: 'string',
    buddy_count: 'integer',
    annual_price_usdt: 'numeric',
    included_buddy_ids: 'jsonb',
    includes_personal_buddy_creation: 'boolean',
    created_at: 'timestamp',
    updated_at: 'timestamp',
  },
  buddy_products: {
    buddy_id: 'string',
    buddy_name: 'string',
    buddy_type: 'string',
    category: 'string',
    description: 'string',
    annual_price_usdt: 'numeric',
    features_json: 'jsonb',
    rag_index: 'string',
    is_active: 'boolean',
    created_at: 'timestamp',
    updated_at: 'timestamp',
  },
  commission_caps: {
    cap_id: 'uuid',
    commission_type: 'string',
    max_percentage: 'numeric',
    effective_date: 'date',
    created_at: 'timestamp',
  },
  commissions: {
    commission_id: 'uuid',
    recipient_user_id: 'uuid',
    upline_level: 'integer',
    commission_percentage: 'numeric',
    commission_amount_usdt: 'numeric',
    payment_date: 'timestamp',
    payment_status: 'string',
    source_type: 'string',
    package_purchase_id: 'uuid',
    personal_buddy_sale_id: 'uuid',
    created_at: 'timestamp',
    source_user_id: 'uuid',
  },
  company_monthly_earnings: {
    earning_month: 'date',
    earning_type: 'string',
    source_id: 'string',
    base_amount: 'numeric',
    company_percentage: 'numeric',
    company_amount: 'numeric',
    description: 'string',
    created_at: 'timestamp',
    updated_at: 'timestamp',
    earning_id: 'uuid',
  },
  harmonic_distribution_weights: {
    weight_id: 'uuid',
    pool_tier: 'integer',
    user_streamline_position: 'integer',
    harmonic_weight: 'numeric',
    calculation_formula: 'string',
    created_at: 'timestamp',
  },
  monthly_business_volume: {
    mbv_id: 'uuid',
    user_id: 'uuid',
    calculation_month: 'date',
    personal_sales_volume: 'numeric',
    total_downline_volume: 'numeric',
    leg_volumes_json: 'jsonb',
    active_status: 'boolean',
    created_at: 'timestamp',
    balance_violation: 'boolean',
    active_l1_count: 'numeric',
  },
  monthly_business_volume_snapshot_202508: {
    mbv_id: 'uuid',
    user_id: 'uuid',
    calculation_month: 'date',
    personal_sales_volume: 'numeric',
    total_downline_volume: 'numeric',
    leg_volumes_json: 'jsonb',
    active_status: 'boolean',
    created_at: 'timestamp',
    balance_violation: 'boolean',
    active_l1_count: 'numeric',
  },
  monthly_calculation_status: {
    calculation_month: 'string',
    status: 'string',
    started_at: 'timestamp',
    completed_at: 'timestamp',
    error_message: 'string',
  },
  personal_buddies: {
    personal_buddy_id: 'uuid',
    buddy_id: 'string',
    creator_user_id: 'uuid',
    creation_date: 'timestamp',
    knowledge_base: 'string',
    custom_prompts: 'string',
    guardrail_settings: 'jsonb',
    created_at: 'timestamp',
    updated_at: 'timestamp',
  },
  personal_buddy_sales: {
    sale_id: 'uuid',
    personal_buddy_id: 'uuid',
    buyer_user_id: 'uuid',
    sale_date: 'timestamp',
    annual_fee_usdt: 'numeric',
    creator_commission_usdt: 'numeric',
    created_at: 'timestamp',
  },
  pool_distributions: {
    distribution_id: 'uuid',
    pool_tier: 'integer',
    distribution_month: 'date',
    total_pool_fund_usdt: 'numeric',
    equal_share_amount_usdt: 'numeric',
    weighted_share_total_usdt: 'numeric',
    created_at: 'timestamp',
  },
  pool_tiers: {
    pool_tier: 'integer',
    pool_name: 'string',
    direct_buy_price_usdt: 'numeric',
    cumulative_bv_requirement: 'numeric',
    active_level1_requirement: 'integer',
    partner_requirement_json: 'jsonb',
    requalification_fee_usdt: 'numeric',
    free_buddies_count: 'integer',
    created_at: 'timestamp',
    updated_at: 'timestamp',
  },
  system_settings: {
    month: 'string',
    monthly_processing_status: 'string',
    lock_timestamp: 'timestamp',
    unlock_timestamp: 'timestamp',
  },
  transaction_ledger: {
    transaction_id: 'uuid',
    user_id: 'uuid',
    transaction_type: 'string',
    amount_usdt: 'numeric',
    reference_id: 'string',
    transaction_date: 'timestamp',
    blockchain_hash: 'string',
    status: 'string',
    created_at: 'timestamp',
  },
  transaction_ledger_snapshot_202508: {
    transaction_id: 'uuid',
    user_id: 'uuid',
    transaction_type: 'string',
    amount_usdt: 'numeric',
    reference_id: 'string',
    transaction_date: 'timestamp',
    blockchain_hash: 'string',
    status: 'string',
    created_at: 'timestamp',
  },
  upline_matching_bonuses: {
    bonus_id: 'uuid',
    recipient_user_id: 'uuid',
    source_user_id: 'uuid',
    matching_level: 'integer',
    bonus_percentage: 'numeric',
    bonus_amount_usdt: 'numeric',
    calculation_month: 'date',
    required_pool_tier: 'integer',
    created_at: 'timestamp',
  },
  user_buddy_subscriptions: {
    subscription_id: 'uuid',
    user_id: 'uuid',
    buddy_id: 'string',
    purchase_date: 'timestamp',
    expiry_date: 'date',
    purchase_price_usdt: 'numeric',
    is_active: 'boolean',
    subscription_type: 'string',
    created_at: 'timestamp',
  },
  user_monthly_activity: {
    activity_id: 'integer',
    user_id: 'uuid',
    activity_month: 'string',
    is_active: 'boolean',
    activity_reason: 'string',
    created_at: 'timestamp',
    updated_at: 'timestamp',
  },
  user_network_tree: {
    tree_id: 'uuid',
    user_id: 'uuid',
    sponsor_id: 'uuid',
    placement_position: 'string',
    tree_level: 'integer',
    leg_identifier: 'string',
    joined_date: 'timestamp',
    created_at: 'timestamp',
  },
  user_package_purchases: {
    purchase_id: 'uuid',
    user_id: 'uuid',
    package_id: 'string',
    purchase_date: 'timestamp',
    purchase_amount_usdt: 'numeric',
    expiry_date: 'date',
    transaction_hash: 'string',
    created_at: 'timestamp',
  },
  user_pool_earnings: {
    earning_id: 'uuid',
    user_id: 'uuid',
    distribution_id: 'uuid',
    equal_share_usdt: 'numeric',
    weighted_share_usdt: 'numeric',
    harmonic_weight: 'numeric',
    payment_date: 'date',
    created_at: 'timestamp',
  },
  user_pool_earnings_snapshot_202508: {
    earning_id: 'uuid',
    user_id: 'uuid',
    distribution_id: 'uuid',
    equal_share_usdt: 'numeric',
    weighted_share_usdt: 'numeric',
    harmonic_weight: 'numeric',
    payment_date: 'date',
    created_at: 'timestamp',
  },
  user_pool_investments: {
    investment_id: 'uuid',
    user_id: 'uuid',
    pool_tier: 'integer',
    investment_date: 'timestamp',
    investment_amount_usdt: 'numeric',
    activation_credit_usdt: 'numeric',
    distributable_amount_usdt: 'numeric',
    qualification_expiry_date: 'date',
    created_at: 'timestamp',
  },
  user_pool_qualifications: {
    qualification_id: 'uuid',
    user_id: 'uuid',
    pool_tier: 'integer',
    qualification_month: 'date',
    monthly_bv_achieved: 'numeric',
    active_l1_count: 'integer',
    partner_legs_json: 'jsonb',
    qualification_method: 'string',
    is_qualified: 'boolean',
    created_at: 'timestamp',
  },
  user_pool_qualifications_snapshot_202508: {
    qualification_id: 'uuid',
    user_id: 'uuid',
    pool_tier: 'integer',
    qualification_month: 'date',
    monthly_bv_achieved: 'numeric',
    active_l1_count: 'integer',
    partner_legs_json: 'jsonb',
    qualification_method: 'string',
    is_qualified: 'boolean',
    created_at: 'timestamp',
  },
  users: {
    user_id: 'uuid',
    email: 'string',
    username: 'string',
    password_hash: 'string',
    first_name: 'string',
    last_name: 'string',
    date_of_birth: 'date',
    place_of_birth: 'string',
    time_of_birth: 'string',
    wallet_address_usdt: 'string',
    joined_date: 'timestamp',
    sponsor_user_id: 'uuid',
    streamline_number: 'integer',
    is_active: 'boolean',
    activity_credit_balance: 'numeric',
    last_activity_check_date: 'date',
    created_at: 'timestamp',
    updated_at: 'timestamp',
    cumulative_business_volume: 'numeric',
    user_type: 'string',
  },
  users_snapshot_202508: {
    user_id: 'uuid',
    email: 'string',
    username: 'string',
    password_hash: 'string',
    first_name: 'string',
    last_name: 'string',
    date_of_birth: 'date',
    place_of_birth: 'string',
    time_of_birth: 'string',
    wallet_address_usdt: 'string',
    joined_date: 'timestamp',
    sponsor_user_id: 'uuid',
    streamline_number: 'integer',
    is_active: 'boolean',
    activity_credit_balance: 'numeric',
    last_activity_check_date: 'date',
    created_at: 'timestamp',
    updated_at: 'timestamp',
    cumulative_business_volume: 'numeric',
    user_type: 'string',
  },
};

// API utility for fetching table data
export async function fetchTableData(tableName, limit = 1000, offset = 0) {
  const response = await fetch(`https://mentify.srv880406.hstgr.cloud/api/tables/${tableName}/data?limit=${limit}&offset=${offset}`,
    { headers: { 'accept': 'application/json' } }
  );
  if (!response.ok) throw new Error('Failed to fetch table data');
  return response.json();
}
